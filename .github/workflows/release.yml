name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string
        default: '1.0.0'

jobs:
  build:
    name: Build Wails App
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
#        os: [ubuntu-latest, windows-latest, macos-latest]
        os: [macos-latest]
        include:
#          - os: ubuntu-latest
#            artifact_name: synterix-linux
#            wails_platform: linux
#          - os: windows-latest
#            artifact_name: synterix-windows
#            wails_platform: windows
          - os: macos-latest
            artifact_name: synterix-darwin
            wails_platform: darwin

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev pkg-config
          export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:$PKG_CONFIG_PATH

      - name: Install Windows dependencies
        if: matrix.os == 'windows-latest'
        run: choco install -y nsis

      - name: Create version tag
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          echo "TAG_NAME=v${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Create and push tag
        run: |
          git tag ${{ env.TAG_NAME }}
          git push origin ${{ env.TAG_NAME }}

      - name: Build project
        run: |
          if ($env:matrix_wails_platform -eq "windows") {
            wails build -nsis
          } else {
            wails build
          }
        shell: pwsh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: build/bin/*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          files: |
            artifacts/synterix-darwin/*