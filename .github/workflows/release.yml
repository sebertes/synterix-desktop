name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string
        default: '1.0.0'

jobs:
  build:
    name: Wails build
    strategy:
      matrix:
        build:
          - name: 'App'
            platform: 'linux/amd64'
            os: 'ubuntu-latest'
          - name: 'App'
            platform: 'windows/amd64'
            os: 'windows-latest'
          - name: 'App'
            platform: 'darwin/universal'
            os: 'macos-latest'
      fail-fast: false
    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build wails
        uses: dAppServer/wails-build-action@v3
        id: build
        with:
          build-name: ${{ matrix.build.name }}
          build-platform: ${{ matrix.build.platform }}
          package: false
          go-version: '1.23'

      - name: Create version tag
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          echo "TAG_NAME=v${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Create and push tag
        run: |
          git tag ${{ env.TAG_NAME }}
          git push origin ${{ env.TAG_NAME }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build.name }}-${{ matrix.build.platform }}
          path: build/bin/*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          files: |
            artifacts/synterix-darwin/*
            artifacts/synterix-linux/*
            artifacts/synterix-windows/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
