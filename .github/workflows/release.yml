name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string
        default: '1.0.0'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            build-platform: linux/amd64
          - os: macos-latest
            build-platform: darwin/universal
          - os: windows-latest
            build-platform: windows/amd64
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Wails Application
        uses: dAppServer/wails-build-action@main
        with:
          build-name: synterix
          build-platform: ${{ matrix.build-platform }}
          package: true

      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: synterix-${{ matrix.os }}
          path: build/bin/**

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create tag if not exists
        run: |
          if git rev-parse "v${{ github.event.inputs.version }}" >/dev/null 2>&1; then
            echo "Tag v${{ github.event.inputs.version }} already exists."
          else
            git config user.name "${{ github.actor }}"
            git config user.email "${{ github.actor }}@users.noreply.github.com"
            git tag -a "v${{ github.event.inputs.version }}" -m "Release v${{ github.event.inputs.version }}"
            git push origin "v${{ github.event.inputs.version }}"
          fi

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: v${{ github.event.inputs.version }}
          body: |
            Release v${{ github.event.inputs.version }}
          files: ./artifacts/**/*